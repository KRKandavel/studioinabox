{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for the resources."
            }
        },
        "resourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Name of the resource group."
            }
        },
        "diskEmptyOrCopy": {
            "type": "string",
            "defaultValue": "Empty",
            "allowedValues": [
                "Empty",
                "Attach",
                "Copy"
            ],
            "metadata": {
                "description": "Determines whether or not disk needs to be created new or from snapshot."
            }
        },
        "diskName": {
            "type": "string",
            "defaultValue": "[concat('disk', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Name of the disk"
            }
        },
        "diskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Storage account type"
            }
        },
        "diskSize": {
            "type": "int",
            "minValue": 10,
            "maxValue": 2048,
            "defaultValue": 50,
            "metadata": {
                "description": "Please select the size of the data disk you wish to deploy (value is integer GB) to hold your metadata, logs and depot (archive files). This can be any value up to 2TB (2048 GB)."
            }
        },
        "diskSnapshot": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Disk Snapshot for Depot/Log/Metadata/Journal volumes"
            }
        },
        "zone": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "diskSourceResourceId": "[if(equals(parameters('diskEmptyOrCopy'), 'Copy'), parameters('diskSnapshot'), json('null'))]",
        "zones": [
            "[parameters('zone')]"
        ]
    },
    "resources": [
        {
            "condition": "[equals(parameters('diskEmptyOrCopy'), 'Empty')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2020-09-30",
            "name": "[concat(parameters('diskName'))]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('diskType')]"
            },
            "zones": "[if(not(equals(parameters('zone'),'')), variables('zones'),'')]",
            "properties": {
                "creationData": {
                    "createOption": "[parameters('diskEmptyOrCopy')]"
                },
                "diskSizeGB": "[parameters('diskSize')]"
            }
        },
        {
            "condition": "[equals(parameters('diskEmptyOrCopy'), 'Copy')]",
            "type": "Microsoft.Compute/disks",
            "apiVersion": "2020-09-30",
            "name": "[concat(parameters('diskName'), '-snapshot')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('diskType')]"
            },
            "zones": "[if(not(equals(parameters('zone'),'')), variables('zones'),'')]",
            "properties": {
                "creationData": {
                    "createOption": "[parameters('diskEmptyOrCopy')]",
                    "sourceResourceId": "[variables('diskSourceResourceId')]"
                },
                "diskSizeGB": "[parameters('diskSize')]"
            }
        }
    ],
    "outputs": {
        "diskID": {
            "type": "string",
            //            "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('diskName'))]"
            "value": "[if(equals(parameters('diskEmptyOrCopy'), 'Empty'), resourceId('Microsoft.Compute/disks', parameters('diskName')), resourceId('Microsoft.Compute/disks', concat(parameters('diskName'), '-snapshot
            
            
            ')))]"
        }
    }
}
