{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "defaultValue": "dev",
            "type": "String"
        },
        "zone": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of the primary zones"
            }
        },
        "vnetName": {
            "defaultValue": "HXVNET",
            "type": "String"
        },
        "p4SubnetName": {
            "defaultValue": "PublicSubnet0",
            "type": "String"
        },
        "p4NicName": {
            "type": "string",
            "defaultValue": "hxnic"
        },
        "p4PublicIPName": {
            "defaultValue": "hxcorepip",
            "type": "String",
            "metadata": {
                "description": "Name of the public IP to assign for NIC"
            }
        },
        "p4PublicIPDNS": {
            "defaultValue": "hxcorepip",
            "type": "String",
            "metadata": {
                "description": "Name of the public IP to assign for NIC"
            }
        },
        "p4PrivateAddress": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Private IP address to assign to HXCore VM."
            }
        },
        "p4NsgName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of the NSG to apply in NIC"
            }
        },
        "p4AdminUser": {
            "type": "string",
            "defaultValue": "centos",
            "metadata": {
                "description": "Admin username for Virtual Machine"
            }
        },
        "p4SSHSource": {
            "type": "string",
            "allowedValues": [
                "existing",
                "public"
            ],
            "defaultValue": "public",
            "metadata": {
                "description": "The key to use for Linux OS."
            }
        },
        "p4AdminKeyID": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "P4 Admin Key ID."
            }
        },
        "p4AdminAuthType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine."
            }
        },
        "p4AdminPublicKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password or ssh key for the Virtual Machine."
            }
        },
        "p4VMName": {
            "type": "string",
            "defaultValue": "[concat('hxcorevm', uniqueString(resourceGroup().id))]"
        },
        "p4VMSize": {
            "type": "string",
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "Please select the size of the VM you wish to deploy."
            }
        },
        "p4FromScratchOrSnapshot": {
            "type": "string",
            "allowedValues": [
                "scratch",
                "snapshot"
            ],
            "defaultValue": "scratch",
            "metadata": {
                "description": "Create P4 disks from scratch or snapshot."
            }
        },
        "p4SnapshotIDArchive": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the depot disk"
            }
        },
        "p4SnapshotIDJournal": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the journal disk"
            }
        },
        "p4SnapshotIDLog": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the log disk"
            }
        },
        "p4SnapshotIDMetadata": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the metadata disk"
            }
        },
        "depotDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Storage disk account type"
            }
        },
        "depotDiskSize": {
            "type": "int",
            "minValue": 10,
            "maxValue": 2048,
            "defaultValue": 50,
            "metadata": {
                "description": "Please select the size of the data disk you wish to deploy (value is integer GB)."
            }
        },
        "logDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Storage account type"
            }
        },
        "logDiskSize": {
            "type": "int",
            "minValue": 10,
            "maxValue": 2048,
            "defaultValue": 50,
            "metadata": {
                "description": "Please select the size of the data disk you wish to deploy (value is integer GB)."
            }
        },
        "metadataDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Storage disk account type"
            }
        },
        "metadataDiskSize": {
            "type": "int",
            "minValue": 10,
            "maxValue": 2048,
            "defaultValue": 50,
            "metadata": {
                "description": "Please select the size of the data disk you wish to deploy (value is integer GB)."
            }
        },
        "journalDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Storage disk account type"
            }
        },
        "journalDiskSize": {
            "type": "int",
            "minValue": 10,
            "maxValue": 2048,
            "defaultValue": 50,
            "metadata": {
                "description": "Please select the size of the data disk you wish to deploy (value is integer GB)."
            }
        },
        "p4PreUserData": {
            "type": "string",
            "defaultValue": "echo p4preuserdata",
            "metadata": {
                "description": "Userdata to run before the default P4 userdata"
            }
        },
        "p4PostUserData": {
            "type": "string",
            "defaultValue": "echo p4postuserdata",
            "metadata": {
                "description": "Userdata to run after the default P4 userdata"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "hxstore",
            "metadata": {
                "description": "Name of the storage account"
            }
        },
        "vmIdentitySetting": {
            "type": "string",
            "defaultValue": "None",
            "allowedValues": [
                "None",
                "SystemAssigned"
            ],
            "metadata": {
                "description": "Determines whether or not managed identity should be configured."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        },
        "tagsByResource": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "tags by resources to update in resources"
            }
        }
    },
    "variables": {
        // Linked Template URIs
        "rbacAssignRoleTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('IAM/rbacAssignRole.json', parameters('_artifactsLocationSasToken')))]",
        "managedDiskTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('Storage/createManagedDisk.json', parameters('_artifactsLocationSasToken')))]",
        "publicIPTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('Network/publicIP.json', parameters('_artifactsLocationSasToken')))]",
        "networkInterfaceTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('Network/networkInterface.json', parameters('_artifactsLocationSasToken')))]",
        "linuxVMandMultiDiskTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('Compute/linuxVMandMultiDisk.json', parameters('_artifactsLocationSasToken')))]",
        "linuxCustomScriptTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('Compute/linuxCustomScript.json', parameters('_artifactsLocationSasToken')))]",

        // Snapshot IDs
        "depotDiskSnapshot": "[parameters('p4SnapshotIDArchive')]",
        "logDiskSnapshot": "[parameters('p4SnapshotIDLog')]",
        "metadataDiskSnapshot": "[parameters('p4SnapshotIDMetadata')]",
        "journalDiskSnapshot": "[parameters('p4SnapshotIDJournal')]",
        "p4DiskEmptyOrCopy": "[if(equals(parameters('p4FromScratchOrSnapshot'), 'scratch'), 'Empty' , 'Copy')]",
        "p4depotDiskName": "[if(equals(parameters('p4FromScratchOrSnapshot'), 'scratch'), concat(parameters('environment'), 'depotDisk') , concat(parameters('environment'), 'depotDisk-snapshot'))]",
        "p4logDiskName": "[if(equals(parameters('p4FromScratchOrSnapshot'), 'scratch'), concat(parameters('environment'), 'logDisk') , concat(parameters('environment'), 'logDisk-snapshot'))]",
        "p4metadataDiskName": "[if(equals(parameters('p4FromScratchOrSnapshot'), 'scratch'), concat(parameters('environment'), 'metadataDisk') , concat(parameters('environment'), 'metadataDisk-snapshot'))]",
        "p4journalDiskName": "[if(equals(parameters('p4FromScratchOrSnapshot'), 'scratch'), concat(parameters('environment'), 'journalDisk') , concat(parameters('environment'), 'journalDisk-snapshot'))]",

        // Userdata scripts & commands
        "P4PreUserData": "[concat(
'',            
            parameters('p4PreUserData'),
''
)]",
        "P4PostUserData": "[concat(
'
sudo mkdir -p /opt/perforce/etc 
sudo touch /opt/perforce/etc/swarm-trigger.conf 
mv /opt/perforce/etc/swarm-trigger.conf /opt/perforce/etc/swarm-trigger-original.conf
cat <<EOT >> /opt/perforce/etc/swarm-trigger.conf
  SWARM_HOST=''http:////10.0.0.71''
  SWARM_TOKEN=''C02E4B53-A155-920C-A152-988C37D2F700''
  ADMIN_USER=''''
  ADMIN_TICKET_FILE=''''
  P4_PORT=''''
  P4=''p4''
  EXEMPT_FILE_COUNT=0
  EXEMPT_EXTENSIONS=''''
  VERIFY_SSL=1
  TIMEOUT=30
  IGNORE_TIMEOUT=0
  IGNORE_NOSERVER=0
EOT                  
',            
            parameters('p4PostUserData'),
''
)]",

        "p4CustomData": "[concat(
            variables('P4PreUserData'), '\n', 
            variables('P4PostUserData'), '\n'
        )]",
        "p4CmdToRun": "sudo cp /var/lib/cloud/instance/user-data.txt /var/lib/cloud/instance/user-data.sh;sed -e \"s/\r//g\" /var/lib/cloud/instance/user-data.sh > /tmp/user-data.sh;sudo bash /tmp/user-data.sh"

    },
    "resources": [
        /* Deploy P4D Server */
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "deployHXCorePublicIP1",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('publicIPTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "publicIPName": {
                        "value": "[parameters('p4PublicIPName')]"
                    },
                    "publicIPAllocationMethod": {
                        "value": "Static"
                    },
                    "publicIPDNS": {
                        "value": "[parameters('p4PublicIPDNS')]"
                    },
                    "zone": {
                        "value": "[parameters('zone')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "deployHXCoreNIC1",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployHXCorePublicIP1')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('networkInterfaceTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('p4SubnetName')]"
                    },
                    "nicName": {
                        "value": "[parameters('p4NicName')]"
                    },
                    "privateIPAddress": {
                        "value": "[parameters('p4PrivateAddress')]"
                    },
                    "publicIPName": {
                        "value": "[parameters('p4PublicIPName')]"
                    },
                    "nsgName": {
                        "value": "[parameters('p4NsgName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "createManagedDiskDepot",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('managedDiskTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "diskEmptyOrCopy": {
                        "value": "[variables('p4DiskEmptyOrCopy')]"
                    },
                    "diskName": {
                        "value": "[concat(parameters('environment'), 'depotDisk')]"
                    },
                    "diskType": {
                        "value": "[parameters('depotDiskType')]"
                    },
                    "diskSize": {
                        "value": "[parameters('depotDiskSize')]"
                    },
                    "diskSnapshot": {
                        "value": "[variables('depotDiskSnapshot')]"
                    },
                    "zone": {
                        "value": "[parameters('zone')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "createManagedDiskLog",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('managedDiskTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "diskEmptyOrCopy": {
                        "value": "[variables('p4DiskEmptyOrCopy')]"
                    },
                    "diskName": {
                        "value": "[concat(parameters('environment'), 'logDisk')]"
                    },
                    "diskType": {
                        "value": "[parameters('logDiskType')]"
                    },
                    "diskSize": {
                        "value": "[parameters('logDiskSize')]"
                    },
                    "diskSnapshot": {
                        "value": "[variables('logDiskSnapshot')]"
                    },
                    "zone": {
                        "value": "[parameters('zone')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "createManagedDiskMetadata",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('managedDiskTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "diskEmptyOrCopy": {
                        "value": "[variables('p4DiskEmptyOrCopy')]"
                    },
                    "diskName": {
                        "value": "[concat(parameters('environment'), 'metadataDisk')]"
                    },
                    "diskType": {
                        "value": "[parameters('metadataDiskType')]"
                    },
                    "diskSize": {
                        "value": "[parameters('metadataDiskSize')]"
                    },
                    "diskSnapshot": {
                        "value": "[variables('metadataDiskSnapshot')]"
                    },
                    "zone": {
                        "value": "[parameters('zone')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "createManagedDiskJournal",
            "dependsOn": [
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('managedDiskTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "diskEmptyOrCopy": {
                        "value": "[variables('p4DiskEmptyOrCopy')]"
                    },
                    "diskName": {
                        "value": "[concat(parameters('environment'), 'journalDisk')]"
                    },
                    "diskType": {
                        "value": "[parameters('journalDiskType')]"
                    },
                    "diskSize": {
                        "value": "[parameters('journalDiskSize')]"
                    },
                    "diskSnapshot": {
                        "value": "[variables('journalDiskSnapshot')]"
                    },
                    "zone": {
                        "value": "[parameters('zone')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "deployHXCoreVM1",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployHXCoreNIC1')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('linuxVMandMultiDiskTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[parameters('p4VMName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('p4VMSize')]"
                    },
                    "nicName": {
                        "value": "[parameters('p4NicName')]"
                    },
                    "depotDiskName": {
                        "value": "[variables('p4depotDiskName')]"
                    },
                    "logDiskName": {
                        "value": "[variables('p4logDiskName')]"
                    },
                    "metadataDiskName": {
                        "value": "[variables('p4metadataDiskName')]"
                    },
                    "journalDiskName": {
                        "value": "[variables('p4journalDiskName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('p4AdminUser')]"
                    },
                    "adminSSHSource": {
                        "value": "[parameters('p4SSHSource')]"
                    },
                    "adminKeyID": {
                        "value": "[parameters('p4AdminKeyID')]"
                    },
                    "authenticationType": {
                        "value": "[parameters('p4AdminAuthType')]"
                    },
                    "adminPasswordOrKey": {
                        "value": "[parameters('p4AdminPublicKey')]"
                    },
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "vmIdentitySetting": {
                        "value": "[parameters('vmIdentitySetting')]"
                    },
                    "customData": {
                        "value": "[variables('P4CustomData')]"
                    },
                    "tagsByResource": {
                        "value": "[parameters('tagsByResource')]"
                    },
                    "zone": {
                        "value": "[parameters('zone')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "assignRoleHXCoreVM1",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployHXCoreVM1')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('rbacAssignRoleTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageName": {
                        "value": "[concat(parameters('environment'), 'hxstore')]"
                    },
                    "principalId": {
                        "value": "[reference('deployHXCoreVM1').outputs.vmPrincipalID.value]"
                    },
                    "builtInRoleType": {
                        "value": "Reader"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "deployHXCoreVM1Script",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'deployHXCoreVM1')]",
                "[resourceId('Microsoft.Resources/deployments', 'assignRoleHXCoreVM1')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('linuxCustomScriptTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[parameters('p4VMName')]"
                    },
                    "commandToRun": {
                        "value": "[variables('p4CmdToRun')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "hxcoreVM1PrincipalID": {
            "type": "string",
            "value": "[reference('deployHXCoreVM1').outputs.vmPrincipalID.value]"
        },
        "hxcoreVM1RoleAssignID": {
            "type": "string",
            "value": "[reference('assignRoleHXCoreVM1').outputs.roleAssignIDStorage.value]"
        },
        "hxcoreVM1FQDN": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('p4PublicIPName')), '2018-04-01').dnsSettings.fqdn]"
        }
    }
}
