{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceGroup": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Name of storage account to grant access for VM managed identity"
            }
        },
        "storageName": {
            "type": "string",
            "metadata": {
                "description": "Name of storage account to grant access for VM managed identity"
            }
        },
        "principalId": {
            "type": "string",
            "metadata": {
                "description": "The principal to assign the role to"
            }
        },
        "builtInRoleType": {
            "type": "string",
            "defaultValue": "Reader",
            "allowedValues": [
                "Owner",
                "Contributor",
                "Reader"
            ],
            "metadata": {
                "description": "Built-in role to assign"
            }
        },
        "roleNameGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]",
            //            "defaultValue": "[guid(resourceGroup().id)]",
            //"defaultValue": "[guid(parameters('principalId'), parameters('roleDefinitionId'), parameters('rgName'))]",
            "metadata": {
                "description": "A new GUID used to identify the role assignment"
            }
        }
    },
    "variables": {
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "Custom": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'abcbd72a7-3385-48ef-bd42-f606fba81ae7')]",

        "roleAccessStorage": "[guid(parameters('principalId'), variables(parameters('builtInRoleType')), parameters('storageName'))]",
        "roleAccessRG": "[guid(parameters('principalId'), variables(parameters('builtInRoleType')), parameters('resourceGroup'))]",
        //        "roleNameCustom": "[guid(parameters('principalId'), variables(parameters('builtInRoleType')), parameters('storageName'))]",
        "roleNameStorage": "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleAccessStorage'))]",
        "roleNameStorageExists": "[if(not(equals(variables('roleNameStorage'), '')), 'Exists', 'not exists')]",
        "roleNameRG": "[resourceId('Microsoft.Authorization/roleAssignments', variables('roleAccessRG'))]",
        "roleNameRGExists": "[if(not(equals(variables('roleNameRG'), '')), 'Exists', 'not exists')]"
    },
    "resources": [
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('roleAccessStorage')]",
            "scope": "[concat('Microsoft.Storage/storageAccounts', '/', parameters('storageName'))]",
            "dependsOn": [
            ],
            "properties": {
                "roleDefinitionId": "[variables(parameters('builtInRoleType'))]",
                "principalId": "[parameters('principalId')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2017-09-01",
            "name": "[variables('roleAccessRG')]",
//            "scope": "[concat('Microsoft.Resources/resourceGroups', '/', parameters('resourceGroup'))]",
            "dependsOn": [
            ],
            "properties": {
                "roleDefinitionId": "[variables(parameters('builtInRoleType'))]",
                "principalId": "[parameters('principalId')]"
            }
        }
    ],
    "outputs": {
        "roleAssignIDStorage": {
            "type": "string",
            "value": "[variables('roleNameStorageExists')]"
        },
        "roleAssignIDRG": {
            "type": "string",
            "value": "[variables('roleNameRGExists')]"
        }
    }
}